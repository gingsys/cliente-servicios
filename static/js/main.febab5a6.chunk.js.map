{"version":3,"sources":["componentes/clientes.jsx","componentes/servicios.jsx","componentes/empleados.jsx","App.js","index.js"],"names":["Clientes","baseUrl","useState","clientes","setClientes","distritos","setDistritos","modalInsertar","setModalInsertar","modalEditar","setModalEditar","modalEliminar","setModalEliminar","codCli","nomCli","dniRuc","telfCli","codDis","nomDis","dirCli","email","clienteSeleccionado","setClienteSeleccionado","abrirCerrarModalInsertar","abrirCerrarModalEditar","abrirCerrarModalEliminar","handleChange","e","target","name","value","console","log","peticionGet","a","axios","get","then","response","data","catch","error","distritosGet","peticionPost","post","concat","peticionPut","eliminado","put","respuesta","map","cliente","cod","nom","dniruc","telf","dis","dir","peticionDelete","delete","filter","seleccionarCliente","caso","useEffect","class","className","id","type","onClick","Modal","isOpen","ModalHeader","ModalBody","htmlFor","onChange","ModalFooter","readOnly","Servicios","servicios","setServicios","empleados","setEmpleados","codServ","desServ","fecha","codEmp","nomEmp","servicioSeleccionado","setServicioSeleccionado","clientesGet","empleadosGet","parseInt","servicio","seleccionarServicios","disabled","Empleados","empleado","setEmpleado","dni","telfEmp","dirEmp","empleadoSeleccionado","setEmpleadoSeleccionado","seleccionarEmpleado","App","setIsOpen","Navbar","color","dark","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavbarBrand","href","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.febab5a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\nconst Clientes = () => {\r\n\r\n    const baseUrl = \"https://localhost:44350/api/clientes\";\r\n    const distUrl = \"https://localhost:44350/api/distritos\";\r\n    const [clientes, setClientes] = useState([]);\r\n    const [distritos, setDistritos] = useState([]);\r\n    const [modalInsertar, setModalInsertar] = useState(false);\r\n    const [modalEditar, setModalEditar] = useState(false);\r\n    const [modalEliminar, setModalEliminar] = useState(false);\r\n    const [clienteSeleccionado, setClienteSeleccionado] = useState({\r\n        codCli: \"\",\r\n        nomCli: \"\",\r\n        dniRuc: \"\",\r\n        telfCli: \"\",\r\n        codDis: \"\",\r\n        nomDis: \"\",\r\n        dirCli: \"\",\r\n        email: \"\"\r\n    })\r\n\r\n\r\n    const abrirCerrarModalInsertar = () => {\r\n        setModalInsertar(!modalInsertar);\r\n    }\r\n    const abrirCerrarModalEditar = () => {\r\n        setModalEditar(!modalEditar);\r\n    }\r\n    const abrirCerrarModalEliminar = () => {\r\n        setModalEliminar(!modalEliminar);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setClienteSeleccionado({\r\n            ...clienteSeleccionado,\r\n            [name]: value\r\n        });\r\n        console.log(clienteSeleccionado);\r\n    }\r\n\r\n    const peticionGet = async () => {\r\n        await axios.get(baseUrl)\r\n            .then(response => {\r\n                setClientes(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const distritosGet = async () => {\r\n        await axios.get(distUrl)\r\n            .then(response => {\r\n                setDistritos(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionPost = async () => {\r\n        delete clienteSeleccionado.codCli;\r\n        await axios.post(baseUrl, clienteSeleccionado)\r\n            .then(response => {\r\n                setClientes(clientes.concat(response.data));\r\n                peticionGet();\r\n                abrirCerrarModalInsertar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionPut = async () => {\r\n        delete clienteSeleccionado.eliminado;\r\n        delete clienteSeleccionado.nomDis\r\n        await axios.put(baseUrl + \"/\" + clienteSeleccionado.codCli, clienteSeleccionado)\r\n            .then(response => {\r\n                var respuesta = response.data;\r\n                var dataAuxiliar = clientes;\r\n                dataAuxiliar.map(cliente => {\r\n                    if (cliente.codCli === clienteSeleccionado.codCli) {\r\n                        cliente.cod = respuesta.codCli;\r\n                        cliente.nom = respuesta.nomCli;\r\n                        cliente.dniruc = respuesta.dniRuc;\r\n                        cliente.telf = respuesta.telfCli;\r\n                        cliente.dis = respuesta.codDis;\r\n                        cliente.dir = respuesta.dirCli;\r\n                        cliente.email = respuesta.email;\r\n                    }\r\n                })\r\n                peticionGet();\r\n                abrirCerrarModalEditar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionDelete = async () => {\r\n        await axios.delete(baseUrl + \"/\" + clienteSeleccionado.codCli)\r\n            .then(response => {\r\n                setClientes(clientes.filter(clientes => clientes.codCli == response.data))\r\n                peticionGet();\r\n                abrirCerrarModalEliminar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const seleccionarCliente = (cliente, caso) => {\r\n        setClienteSeleccionado(cliente);\r\n        (caso === \"Editar\") ?\r\n            abrirCerrarModalEditar() : abrirCerrarModalEliminar();\r\n    }\r\n\r\n    useEffect(() => {\r\n        peticionGet();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        distritosGet();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 className=\"card-title\">Lista de Clientes</h5>\r\n                    <hr />\r\n                    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => abrirCerrarModalInsertar()}>Registrar Cliente</button>\r\n                            <ul class=\"navbar-nav mr-auto\"></ul>\r\n                        </div>\r\n                    </nav>\r\n                    <hr />\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nombre</th>\r\n                                <th>Dni/RUC</th>\r\n                                <th>Teléfono</th>\r\n                                <th>Distrito</th>\r\n                                <th>Dirección</th>\r\n                                <th>Correo</th>\r\n                                <th>Actualizar</th>\r\n                                <th>Eliminar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {clientes.map(clientes => (\r\n                                <tr key={clientes.codCli}>\r\n                                    <td>{clientes.nomCli}</td>\r\n                                    <td>{clientes.dniRuc}</td>\r\n                                    <td>{clientes.telfCli}</td>\r\n                                    <td>{clientes.nomDis}</td>\r\n                                    <td>{clientes.dirCli}</td>\r\n                                    <td>{clientes.email}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-primary\" onClick={() => seleccionarCliente(clientes, \"Editar\")}>Actualizar</button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger\" onClick={() => seleccionarCliente(clientes, \"Eliminar\")}>Eliminar</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <Modal isOpen={modalInsertar}>\r\n                <ModalHeader>Añadir Cliente</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"nomCli\" className=\"form-label\">Nombre</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"nomCli\" name=\"nomCli\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"dniRuc\" className=\"form-label\">DNI/RUC</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"dniRuc\" name=\"dniRuc\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"telfCli\" className=\"form-label\">Teléfono</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"telfCli\" name=\"telfCli\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"codDis\" className=\"form-label\">Distrito</label>\r\n                            <select className=\"form-control\" id=\"codDis\" name=\"codDis\" onChange={handleChange}>\r\n                                {distritos.map(distritos => (\r\n                                    <option key={distritos.codDis} value={distritos.codDis}>{distritos.nomDis}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"dirCli\" className=\"form-label\">Dirección</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"dirCli\" name=\"dirCli\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"form-label\">Correo</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={handleChange} />\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" onClick={() => peticionPost()} >Añadir</button>{\"   \"}\r\n                    <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalInsertar()}>Cancelar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEditar}>\r\n                <ModalHeader>Editar Cliente</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"codCli\" className=\"form-label\">Código</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"codCli\" name=\"codCli\" readOnly value={clienteSeleccionado && clienteSeleccionado.codCli} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"nomCli\" className=\"form-label\">Nombre</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"nomCli\" name=\"nomCli\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.nomCli} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"dniRuc\" className=\"form-label\">DNI/RUC</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"dniRuc\" name=\"dniRuc\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.dniRuc} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"telfCli\" className=\"form-label\">Teléfono</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"telfCli\" name=\"telfCli\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.telfCli} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"codDis\" className=\"form-label\">Distrito</label>\r\n                            <select className=\"form-control\" id=\"codDis\" name=\"codDis\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.codDis} >\r\n                                {distritos.map(distritos => (\r\n                                    <option key={distritos.codDis} value={distritos.codDis}>{distritos.nomDis}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"dirCli\" className=\"form-label\">Dirección</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"dirCli\" name=\"dirCli\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.dirCli} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"form-label\">Correo</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.email} />\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" onClick={() => peticionPut()} >Editar</button>{\"   \"}\r\n                    <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalEditar()}>Cancelar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEliminar}>\r\n                <ModalBody>\r\n                    Estás seguro que deseas eliminar al Cliente {clienteSeleccionado && clienteSeleccionado.nomCli}?\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-danger\" onClick={() => peticionDelete()}>Sí</button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => abrirCerrarModalEliminar()}>No</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clientes","import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader} from 'reactstrap';\r\n\r\nconst Servicios = () =>{\r\n    const baseUrl = \"https://localhost:44350/api/servicios\";\r\n    const clieUrl = \"https://localhost:44350/api/clientes\";\r\n    const empUrl = \"https://localhost:44350/api/empleados\";\r\n    const [servicios, setServicios] = useState([]);\r\n    const [clientes, setClientes] = useState([]);\r\n    const [empleados, setEmpleados] = useState([]);\r\n    const [modalInsertar, setModalInsertar] = useState(false);\r\n    const [modalEditar, setModalEditar] = useState(false);\r\n    const [modalEliminar, setModalEliminar] = useState(false);\r\n    const [servicioSeleccionado, setServicioSeleccionado] = useState({\r\n        codServ: 0,\r\n        codCli: 0,\r\n        nomCli:\"\",\r\n        desServ: \"\",\r\n        fecha: \"\",\r\n        codEmp: 0,\r\n        nomEmp: \"\"\r\n    })\r\n    \r\n    const abrirCerrarModalInsertar = () => {\r\n        setModalInsertar(!modalInsertar);\r\n    }\r\n    const abrirCerrarModalEditar = () => {\r\n        setModalEditar(!modalEditar);\r\n    }\r\n    const abrirCerrarModalEliminar = () => {\r\n        setModalEliminar(!modalEliminar);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setServicioSeleccionado({\r\n            ...servicioSeleccionado,\r\n            [name]: value\r\n        });\r\n        console.log(servicioSeleccionado);\r\n    }\r\n\r\n    const peticionGet = async () => {\r\n        await axios.get(baseUrl)\r\n            .then(response => {\r\n                setServicios(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const clientesGet = async () => {\r\n        await axios.get(clieUrl)\r\n            .then(response => {\r\n                setClientes(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const empleadosGet = async () => {\r\n        await axios.get(empUrl)\r\n            .then(response => {\r\n                setEmpleados(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionPost = async () => {\r\n        delete servicioSeleccionado.codServ;\r\n        servicioSeleccionado.codEmp=parseInt(servicioSeleccionado.codEmp);\r\n        servicioSeleccionado.codCli=parseInt(servicioSeleccionado.codCli);\r\n        await axios.post(baseUrl, servicioSeleccionado)\r\n            .then(response => {\r\n                setServicios(servicios.concat(response.data));\r\n                peticionGet();\r\n                abrirCerrarModalInsertar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionPut = async () => {\r\n        delete servicioSeleccionado.nomCli;\r\n        delete servicioSeleccionado.nomEmp;\r\n        servicioSeleccionado.codEmp=parseInt(servicioSeleccionado.codEmp);\r\n        await axios.put(baseUrl + \"/\" + servicioSeleccionado.codServ, servicioSeleccionado)\r\n            .then(response => {\r\n                var respuesta = response.data;\r\n                var dataAuxiliar = servicios;\r\n                dataAuxiliar.map(servicio => {\r\n                    if (servicio.codServ === servicioSeleccionado.codServ) {\r\n                        servicio.codServ = respuesta.codServ;\r\n                        servicio.codCli = respuesta.codCli;\r\n                        servicio.desServ = respuesta.desServ;\r\n                        servicio.fecha = respuesta.fecha;\r\n                        servicio.codEmp = respuesta.codEmp;\r\n                    }\r\n                })\r\n                peticionGet();\r\n                abrirCerrarModalEditar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionDelete = async () => {\r\n        await axios.delete(baseUrl + \"/\" + servicioSeleccionado.codServ)\r\n            .then(response => {\r\n                setServicios(servicios.filter(servicios => servicios.codServ == response.data))\r\n                peticionGet();\r\n                abrirCerrarModalEliminar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const seleccionarServicios = (servicio, caso) => {\r\n        setServicioSeleccionado(servicio);\r\n        (caso === \"Editar\") ?\r\n            abrirCerrarModalEditar() : abrirCerrarModalEliminar();\r\n    }\r\n\r\n    useEffect(() => {\r\n        peticionGet();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        clientesGet();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        empleadosGet();\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 className=\"card-title\">Lista de Servicios</h5>\r\n                    <hr />\r\n                    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => abrirCerrarModalInsertar()}>Registrar Servicio</button>\r\n                            <ul class=\"navbar-nav mr-auto\"></ul>\r\n                        </div>\r\n                    </nav>\r\n                    <hr /> \r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nombre de Cliente</th>\r\n                                <th>Descripción de Servicio</th>\r\n                                <th>Fecha de Atención</th>\r\n                                <th>Empleado Asignado</th>\r\n                                <th>Actualizar</th>\r\n                                <th>Eliminar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {servicios.map(servicios => (\r\n                                <tr key={servicios.codServ}>\r\n                                    <td>{servicios.nomCli}</td>\r\n                                    <td>{servicios.desServ}</td>\r\n                                    <td>{servicios.fecha}</td>\r\n                                    <td>{servicios.nomEmp}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-primary\" onClick={() => seleccionarServicios(servicios, \"Editar\")}>Actualizar</button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger\" onClick={() => seleccionarServicios(servicios, \"Eliminar\")}>Eliminar</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <Modal isOpen={modalInsertar}>\r\n                <ModalHeader>Añadir Servicio</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"mb-3\">\r\n                        <label htmlFor=\"codCli\" className=\"form-label\">Seleccione Cliente</label>\r\n                            <select className=\"form-control\" id=\"codCli\" name=\"codCli\" onChange={handleChange}>\r\n                                {clientes.map(clientes => (\r\n                                    <option key={clientes.codCli} value={clientes.codCli}>{clientes.nomCli}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"desServ\" className=\"form-label\">Descripción del Servicio</label>\r\n                            <textarea class=\"form-control\" id=\"desServ\" name=\"desServ\" onChange={handleChange}></textarea>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"fecha\" className=\"form-label\">Seleccione Fecha de Atención</label>\r\n                            <input class=\"form-control\" type=\"date\" id=\"fecha\" name=\"fecha\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"codEmp\" className=\"form-label\">Asigne Empleado</label>\r\n                            <select className=\"form-control\" id=\"codEmp\" name=\"codEmp\" onChange={handleChange}>\r\n                                {empleados.map(empleados => (\r\n                                    <option key={empleados.codEmp} value={empleados.codEmp}>{empleados.nomEmp}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" onClick={() => peticionPost()} >Añadir</button>{\"   \"}\r\n                    <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalInsertar()}>Cancelar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEditar}>\r\n                <ModalHeader>Editar Servicio</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"codServ\" className=\"form-label\">Código</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"codServ\" name=\"codServ\" readOnly value={servicioSeleccionado && servicioSeleccionado.codServ} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"codCli\" className=\"form-label\">Cliente</label>\r\n                            <select className=\"form-control\" id=\"codCli\" name=\"codCli\" onChange={handleChange} disabled value={servicioSeleccionado && servicioSeleccionado.codCli} >\r\n                                {clientes.map(clientes => (\r\n                                    <option key={clientes.codCli} value={clientes.codCli}>{clientes.nomCli}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"desServ\" className=\"form-label\">Descripción del Servicio</label>\r\n                            <textarea type=\"text\" className=\"form-control\" id=\"desServ\" name=\"desServ\" onChange={handleChange} value={servicioSeleccionado && servicioSeleccionado.desServ} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"fecha\" className=\"form-label\">Fecha de Atención</label>\r\n                            <input type=\"date\" className=\"form-control\" id=\"fecha\" name=\"fecha\" onChange={handleChange} value={servicioSeleccionado && servicioSeleccionado.fecha} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"codEmp\" className=\"form-label\">Asigne Empleado</label>\r\n                            <select className=\"form-control\" id=\"codEmp\" name=\"codEmp\" onChange={handleChange} value={servicioSeleccionado && servicioSeleccionado.codEmp} >\r\n                                {empleados.map(empleados => (\r\n                                    <option key={empleados.codEmp} value={empleados.codEmp}>{empleados.nomEmp}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" onClick={() => peticionPut()} >Editar</button>{\"   \"}\r\n                    <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalEditar()}>Cancelar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEliminar}>\r\n                <ModalBody>\r\n                    Estás seguro que deseas eliminar el servicio: {servicioSeleccionado && servicioSeleccionado.desServ} de {servicioSeleccionado && servicioSeleccionado.nomCli}? \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-danger\" onClick={() => peticionDelete()}>Sí</button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => abrirCerrarModalEliminar()}>No</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Servicios","import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader} from 'reactstrap';\r\n\r\nconst Empleados = () =>{\r\n  const baseUrl = \"https://localhost:44350/api/empleados\";\r\n  const distUrl = \"https://localhost:44350/api/distritos\";\r\n  const [empleado, setEmpleado] = useState([]);\r\n  const [distritos, setDistritos] = useState([]);\r\n  const [modalInsertar, setModalInsertar] = useState(false);\r\n  const [modalEditar, setModalEditar] = useState(false);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n  const [empleadoSeleccionado, setEmpleadoSeleccionado] = useState({\r\n    codEmp: \"\",\r\n    nomEmp: \"\",\r\n    dni: \"\",\r\n    telfEmp: \"\",\r\n    codDis: \"\",\r\n    dirEmp: \"\",\r\n    email: \"\"\r\n  })\r\n\r\n\r\n  const abrirCerrarModalInsertar = () => {\r\n    setModalInsertar(!modalInsertar);\r\n  }\r\n  const abrirCerrarModalEditar = () => {\r\n    setModalEditar(!modalEditar);\r\n  }\r\n  const abrirCerrarModalEliminar = () => {\r\n    setModalEliminar(!modalEliminar);\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setEmpleadoSeleccionado({\r\n      ...empleadoSeleccionado,\r\n      [name]: value\r\n    });\r\n    console.log(empleadoSeleccionado);\r\n  }\r\n\r\n  const peticionGet = async () => {\r\n    await axios.get(baseUrl)\r\n      .then(response => {\r\n        setEmpleado(response.data);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const distritosGet = async () => {\r\n    await axios.get(distUrl)\r\n      .then(response => {\r\n        setDistritos(response.data);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const peticionPost = async () => {\r\n    delete empleadoSeleccionado.codEmp;\r\n    await axios.post(baseUrl, empleadoSeleccionado)\r\n      .then(response => {\r\n        setEmpleado(empleado.concat(response.data));\r\n        peticionGet();\r\n        abrirCerrarModalInsertar();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const peticionPut = async () => {\r\n    delete empleadoSeleccionado.eliminado;\r\n    delete empleadoSeleccionado.nomDis\r\n    await axios.put(baseUrl + \"/\" + empleadoSeleccionado.codEmp, empleadoSeleccionado)\r\n      .then(response => {\r\n        var respuesta = response.data;\r\n        var dataAuxiliar = empleado;\r\n        dataAuxiliar.map(empleado => {\r\n          if (empleado.codEmp === empleadoSeleccionado.codEmp) {\r\n            empleado.cod = respuesta.codEmp;\r\n            empleado.nom = respuesta.nomEmp;\r\n            empleado.dni = respuesta.dni;\r\n            empleado.telf = respuesta.telfEmp;\r\n            empleado.dis = respuesta.codDis;\r\n            empleado.dir = respuesta.dirEmp;\r\n            empleado.email = respuesta.email;\r\n          }\r\n        })\r\n        peticionGet();\r\n        abrirCerrarModalEditar();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const peticionDelete = async () => {\r\n    await axios.delete(baseUrl + \"/\" + empleadoSeleccionado.codEmp)\r\n      .then(response => {\r\n        setEmpleado(empleado.filter(empleado => empleado.codEmp == response.data))\r\n        peticionGet();\r\n        abrirCerrarModalEliminar();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const seleccionarEmpleado = (empleado, caso) => {\r\n    setEmpleadoSeleccionado(empleado);\r\n    (caso === \"Editar\") ?\r\n      abrirCerrarModalEditar() : abrirCerrarModalEliminar();\r\n  }\r\n\r\n  useEffect(() => {\r\n    peticionGet();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    distritosGet();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 className=\"card-title\">Lista de Empleados</h5>\r\n          <hr />\r\n          <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={() => abrirCerrarModalInsertar()}>Registrar Empleado</button>\r\n              <ul class=\"navbar-nav mr-auto\"></ul>\r\n            </div>\r\n          </nav>\r\n          <hr />\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nombre</th>\r\n                <th>Dni</th>\r\n                <th>Teléfono</th>\r\n                <th>Distrito</th>\r\n                <th>Dirección</th>\r\n                <th>Correo</th>\r\n                <th>Actualizar</th>\r\n                <th>Eliminar</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {empleado.map(empleado => (\r\n                <tr key={empleado.codEmp}>\r\n                  <td>{empleado.nomEmp}</td>\r\n                  <td>{empleado.dni}</td>\r\n                  <td>{empleado.telfEmp}</td>\r\n                  <td>{empleado.nomDis}</td>\r\n                  <td>{empleado.dirEmp}</td>\r\n                  <td>{empleado.email}</td>\r\n                  <td>\r\n                    <button className=\"btn btn-primary\" onClick={() => seleccionarEmpleado(empleado, \"Editar\")}>Actualizar</button>\r\n                  </td>\r\n                  <td>\r\n                    <button className=\"btn btn-danger\" onClick={() => seleccionarEmpleado(empleado, \"Eliminar\")}>Eliminar</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={modalInsertar}>\r\n        <ModalHeader>Añadir Empleado</ModalHeader>\r\n        <ModalBody>\r\n          <form>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"nomEmp\" className=\"form-label\">Nombre y Apellidos</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"nomEmp\" name=\"nomEmp\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"dni\" className=\"form-label\">Documento de Identidad</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"dni\" name=\"dni\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"telfEmp\" className=\"form-label\">Teléfono</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"telfEmp\" name=\"telfEmp\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"codDis\" className=\"form-label\">Distrito</label>\r\n              <select className=\"form-control\" id=\"codDis\" name=\"codDis\" onChange={handleChange}>\r\n                {distritos.map(distritos => (\r\n                  <option key={distritos.codDis} value={distritos.codDis}>{distritos.nomDis}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"dirEmp\" className=\"form-label\">Dirección</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"dirEmp\" name=\"dirEmp\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"email\" className=\"form-label\">Correo</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={handleChange} />\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-primary\" onClick={() => peticionPost()} >Añadir</button>{\"   \"}\r\n          <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalInsertar()}>Cancelar</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalEditar}>\r\n        <ModalHeader>Editar Empleado</ModalHeader>\r\n        <ModalBody>\r\n          <form>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"codEmp\" className=\"form-label\">Código</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"codEmp\" name=\"codEmp\" readOnly value={empleadoSeleccionado && empleadoSeleccionado.codEmp} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"nomEmp\" className=\"form-label\">Nombre y Apellidos</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"nomEmp\" name=\"nomEmp\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.nomEmp} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"dni\" className=\"form-label\">Documento de Identidad</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"dni\" name=\"dni\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.dni} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"telfEmp\" className=\"form-label\">Teléfono</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"telfEmp\" name=\"telfEmp\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.telfEmp} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"codDis\" className=\"form-label\">Distrito</label>\r\n              <select className=\"form-control\" id=\"codDis\" name=\"codDis\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.codDis} >\r\n                {distritos.map(distritos => (\r\n                  <option key={distritos.codDis} value={distritos.codDis}>{distritos.nomDis}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"dirEmp\" className=\"form-label\">Dirección</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"dirEmp\" name=\"dirEmp\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.dirEmp} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"email\" className=\"form-label\">Correo</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.email} />\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-primary\" onClick={() => peticionPut()} >Editar</button>{\"   \"}\r\n          <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalEditar()}>Cancelar</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalEliminar}>\r\n        <ModalBody>\r\n          Estás seguro que deseas eliminar al Empleado {empleadoSeleccionado && empleadoSeleccionado.nomEmp}?\r\n                </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-danger\" onClick={() => peticionDelete()}>Sí</button>\r\n          <button className=\"btn btn-secondary\" onClick={() => abrirCerrarModalEliminar()}>No</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Empleados","import React, {useState, useEffect} from 'react';\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Contacto from './componentes/clientes';\nimport Servicios from './componentes/servicios';\nimport Empleados from './componentes/empleados';\n\nfunction App() {  \n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n   \n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar color=\"primary\" dark expand=\"md\">\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <NavbarBrand href=\"/empleados\">Empleados</NavbarBrand>\n              </NavItem>\n              <NavItem>\n                <NavbarBrand href=\"/clientes\">Clientes</NavbarBrand>\n              </NavItem>\n              <NavItem>\n                <NavbarBrand href=\"/servicios\">Servicios</NavbarBrand>\n              </NavItem>                \n            </Nav>\n          </Collapse>\n        </Navbar>\n\n        <Switch>\n          <Route path=\"/clientes\">\n            <Contacto />\n          </Route>\n          <Route path=\"/servicios\">\n            <Servicios />\n          </Route>\n          <Route path=\"/empleados\">\n            <Empleados />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}