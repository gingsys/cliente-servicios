{"version":3,"sources":["componentes/clientes.js","componentes/servicios.js","componentes/empleados.js","App.js","index.js"],"names":["Clientes","baseUrl","useState","clientes","setClientes","distritos","setDistritos","modalInsertar","setModalInsertar","modalEditar","setModalEditar","modalEliminar","setModalEliminar","cod_cli","nom_cli","dni_ruc","telf_cli","cod_dis","nom_dis","dir_cli","email","clienteSeleccionado","setClienteSeleccionado","abrirCerrarModalInsertar","abrirCerrarModalEditar","abrirCerrarModalEliminar","handleChange","e","target","name","value","console","log","peticionGet","a","axios","get","then","response","data","catch","error","distritosGet","peticionPost","post","concat","peticionPut","eliminado","put","respuesta","map","cliente","cod_Cli","peticionDelete","codCli","cod","seleccionarCliente","caso","useEffect","class","className","id","type","onClick","Modal","isOpen","ModalHeader","ModalBody","htmlFor","onChange","ModalFooter","hidden","readOnly","Servicios","servicios","setServicios","empleados","setEmpleados","cod_serv","des_serv","fecha","cod_emp","nom_emp","servicioSeleccionado","setServicioSeleccionado","clientesGet","empleadosGet","parseInt","servicio","seleccionarServicios","disabled","Empleados","empleado","setEmpleado","dni","telf_emp","dir_emp","empleadoSeleccionado","setEmpleadoSeleccionado","nom","telf","dis","dir","seleccionarEmpleado","App","setIsOpen","Navbar","color","dark","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavbarBrand","href","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0b22879.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\nconst Clientes = () => {\r\n\r\n    const baseUrl = \"http://api.pyrmultimediasac.com/api/clientes\";\r\n    const distUrl = \"http://api.pyrmultimediasac.com/api/distritos/listarDistritos\";\r\n    const [clientes, setClientes] = useState([]);\r\n    const [distritos, setDistritos] = useState([]);\r\n    const [modalInsertar, setModalInsertar] = useState(false);\r\n    const [modalEditar, setModalEditar] = useState(false);\r\n    const [modalEliminar, setModalEliminar] = useState(false);\r\n    const [clienteSeleccionado, setClienteSeleccionado] = useState({\r\n        cod_cli: \"\",\r\n        nom_cli: \"\",\r\n        dni_ruc: \"\",\r\n        telf_cli: \"\",\r\n        cod_dis: \"\",\r\n        nom_dis: \"\",\r\n        dir_cli: \"\",\r\n        email: \"\"\r\n    })\r\n\r\n\r\n    const abrirCerrarModalInsertar = () => {\r\n        setModalInsertar(!modalInsertar);\r\n    }\r\n    const abrirCerrarModalEditar = () => {\r\n        setModalEditar(!modalEditar);\r\n    }\r\n    const abrirCerrarModalEliminar = () => {\r\n        setModalEliminar(!modalEliminar);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setClienteSeleccionado({\r\n            ...clienteSeleccionado,\r\n            [name]: value\r\n        });\r\n        console.log(clienteSeleccionado);\r\n    }\r\n\r\n    const peticionGet = async () => {\r\n        await axios.get(baseUrl+\"/listarClientes\")\r\n            .then(response => {\r\n                setClientes(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const distritosGet = async () => {\r\n        await axios.get(distUrl)\r\n            .then(response => {\r\n                setDistritos(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionPost = async () => {\r\n        delete clienteSeleccionado.cod_cli;\r\n        await axios.post(baseUrl+\"/registrarCliente\", clienteSeleccionado)\r\n            .then(response => {\r\n                setClientes(clientes.concat(response.data));\r\n                peticionGet();\r\n                abrirCerrarModalInsertar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionPut = async () => {\r\n        delete clienteSeleccionado.eliminado;\r\n        delete clienteSeleccionado.nom_dis\r\n        await axios.put(baseUrl + \"/actualizarCliente\", clienteSeleccionado)\r\n            .then(response => {\r\n                var respuesta = response.data;\r\n                var dataAuxiliar = clientes;\r\n                dataAuxiliar.map(cliente => {\r\n                    if (cliente.cod_cli === clienteSeleccionado.cod_cli) {\r\n                        cliente.cod_cli = respuesta.cod_Cli;\r\n                        cliente.nom_cli = respuesta.nom_cli;\r\n                        cliente.dni_ruc = respuesta.dni_ruc;\r\n                        cliente.telf_cli = respuesta.telf_cli;\r\n                        cliente.cod_dis = respuesta.cod_dis;\r\n                        cliente.dir_cli = respuesta.dir_cli;\r\n                        cliente.email = respuesta.email;\r\n                    }\r\n                })\r\n                peticionGet();\r\n                abrirCerrarModalEditar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionDelete = async () => {\r\n        await axios.post(baseUrl + \"/eliminarCliente\",clienteSeleccionado)\r\n        .then(response => {\r\n            var respuesta = response.data;\r\n            var dataAuxiliar = clientes;\r\n            dataAuxiliar.map(cliente => {\r\n                if (cliente.codCli === clienteSeleccionado.cod_cli) {\r\n                    cliente.cod = respuesta.cod_Cli;\r\n                }\r\n            })\r\n                peticionGet();\r\n                abrirCerrarModalEliminar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const seleccionarCliente = (cliente, caso) => {\r\n        setClienteSeleccionado(cliente);\r\n        (caso === \"Editar\") ?\r\n            abrirCerrarModalEditar() : abrirCerrarModalEliminar();\r\n    }\r\n\r\n    useEffect(() => {\r\n        peticionGet();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        distritosGet();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 className=\"card-title\">Lista de Clientes</h5>\r\n                    <hr />\r\n                    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => abrirCerrarModalInsertar()}>Registrar Cliente</button>\r\n                            <ul class=\"navbar-nav mr-auto\"></ul>\r\n                        </div>\r\n                    </nav>\r\n                    <hr />\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nombre</th>\r\n                                <th>Dni/RUC</th>\r\n                                <th>Teléfono</th>\r\n                                <th>Distrito</th>\r\n                                <th>Dirección</th>\r\n                                <th>Correo</th>\r\n                                <th>Actualizar</th>\r\n                                <th>Eliminar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {clientes.map(clientes => (\r\n                                <tr key={clientes.cod_cli}>\r\n                                    <td>{clientes.nom_cli}</td>\r\n                                    <td>{clientes.dni_ruc}</td>\r\n                                    <td>{clientes.telf_cli}</td>\r\n                                    <td>{clientes.nom_dis}</td>\r\n                                    <td>{clientes.dir_cli}</td>\r\n                                    <td>{clientes.email}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-primary\" onClick={() => seleccionarCliente(clientes, \"Editar\")}>Actualizar</button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger\" onClick={() => seleccionarCliente(clientes, \"Eliminar\")}>Eliminar</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <Modal isOpen={modalInsertar}>\r\n                <ModalHeader>Añadir Cliente</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"nom_cli\" className=\"form-label\">Nombre</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"nom_cli\" name=\"nom_cli\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"dni_ruc\" className=\"form-label\">DNI/RUC</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"dni_ruc\" name=\"dni_ruc\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"telf_cli\" className=\"form-label\">Teléfono</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"telf_cli\" name=\"telf_cli\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"cod_dis\" className=\"form-label\">Distrito</label>\r\n                            <select className=\"form-control\" id=\"cod_dis\" name=\"cod_dis\" onChange={handleChange}>\r\n                                <option value=\"0\">Seleccione</option>\r\n                                {distritos.map(distritos => (\r\n                                    <option key={distritos.cod_dis} value={distritos.cod_dis}>{distritos.nom_dis}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"dir_cli\" className=\"form-label\">Dirección</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"dir_cli\" name=\"dir_cli\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"form-label\">Correo</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={handleChange} />\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" onClick={() => peticionPost()} >Añadir</button>{\"   \"}\r\n                    <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalInsertar()}>Cancelar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEditar}>\r\n                <ModalHeader>Editar Cliente</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"mb-3\" hidden>\r\n                            <label htmlFor=\"cod_Cli\" className=\"form-label\">Código</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"cod_cli\" name=\"cod_cli\" readOnly value={clienteSeleccionado && clienteSeleccionado.cod_cli} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"nom_cli\" className=\"form-label\">Nombre</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"nom_cli\" name=\"nom_cli\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.nom_cli} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"dni_ruc\" className=\"form-label\">DNI/RUC</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"dni_ruc\" name=\"dni_ruc\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.dni_ruc} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"telf_cli\" className=\"form-label\">Teléfono</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"telf_cli\" name=\"telf_cli\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.telf_cli} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"cod_dis\" className=\"form-label\">Distrito</label>\r\n                            <select className=\"form-control\" id=\"cod_dis\" name=\"cod_dis\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.cod_dis} >\r\n                                {distritos.map(distritos => (\r\n                                    <option key={distritos.cod_dis} value={distritos.cod_dis}>{distritos.nom_dis}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"dir_cli\" className=\"form-label\">Dirección</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"dir_cli\" name=\"dir_cli\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.dir_cli} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"form-label\">Correo</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={handleChange} value={clienteSeleccionado && clienteSeleccionado.email} />\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" onClick={() => peticionPut()} >Editar</button>{\"   \"}\r\n                    <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalEditar()}>Cancelar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEliminar}>\r\n                <ModalBody>\r\n                    Estás seguro que deseas eliminar al Cliente {clienteSeleccionado && clienteSeleccionado.nom_cli}?\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-danger\" onClick={() => peticionDelete()}>Sí</button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => abrirCerrarModalEliminar()}>No</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clientes","import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader} from 'reactstrap';\r\n\r\nconst Servicios = () =>{\r\n    const baseUrl = \"http://api.pyrmultimediasac.com/api/servicios\";\r\n    const clieUrl = \"http://api.pyrmultimediasac.com/api/clientes/listarClientes\";\r\n    const empUrl = \"http://api.pyrmultimediasac.com/api/empleados/listarEmpleados\";\r\n    const [servicios, setServicios] = useState([]);\r\n    const [clientes, setClientes] = useState([]);\r\n    const [empleados, setEmpleados] = useState([]);\r\n    const [modalInsertar, setModalInsertar] = useState(false);\r\n    const [modalEditar, setModalEditar] = useState(false);\r\n    const [modalEliminar, setModalEliminar] = useState(false);\r\n    const [servicioSeleccionado, setServicioSeleccionado] = useState({\r\n        cod_serv: 0,\r\n        cod_cli: 0,\r\n        nom_cli:\"\",\r\n        des_serv: \"\",\r\n        fecha: \"\",\r\n        cod_emp: 0,\r\n        nom_emp: \"\"\r\n    })\r\n    \r\n    const abrirCerrarModalInsertar = () => {\r\n        setModalInsertar(!modalInsertar);\r\n    }\r\n    const abrirCerrarModalEditar = () => {\r\n        setModalEditar(!modalEditar);\r\n    }\r\n    const abrirCerrarModalEliminar = () => {\r\n        setModalEliminar(!modalEliminar);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setServicioSeleccionado({\r\n            ...servicioSeleccionado,\r\n            [name]: value\r\n        });\r\n        console.log(servicioSeleccionado);\r\n    }\r\n\r\n    const peticionGet = async () => {\r\n        await axios.get(baseUrl+\"/listarServicios\")\r\n            .then(response => {\r\n                setServicios(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const clientesGet = async () => {\r\n        await axios.get(clieUrl)\r\n            .then(response => {\r\n                setClientes(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const empleadosGet = async () => {\r\n        await axios.get(empUrl)\r\n            .then(response => {\r\n                setEmpleados(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionPost = async () => {\r\n        delete servicioSeleccionado.cod_serv;\r\n        servicioSeleccionado.cod_emp=parseInt(servicioSeleccionado.cod_emp);\r\n        servicioSeleccionado.cod_cli=parseInt(servicioSeleccionado.cod_cli);\r\n        await axios.post(baseUrl+\"/registrarServicios\", servicioSeleccionado)\r\n            .then(response => {\r\n                setServicios(servicios.concat(response.data));\r\n                peticionGet();\r\n                abrirCerrarModalInsertar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionPut = async () => {\r\n        delete servicioSeleccionado.nom_cli;\r\n        delete servicioSeleccionado.nom_emp;\r\n        servicioSeleccionado.cod_emp=parseInt(servicioSeleccionado.cod_emp);\r\n        servicioSeleccionado.cod_cli=parseInt(servicioSeleccionado.cod_cli);\r\n        servicioSeleccionado.cod_serv=parseInt(servicioSeleccionado.cod_serv);\r\n        await axios.put(baseUrl + \"/actualizarServicio\", servicioSeleccionado)\r\n            .then(response => {\r\n                var respuesta = response.data;\r\n                var dataAuxiliar = servicios;\r\n                dataAuxiliar.map(servicio => {\r\n                    if (servicio.cod_serv === servicioSeleccionado.cod_serv) {\r\n                        servicio.cod_serv = respuesta.cod_serv;\r\n                        servicio.cod_cli = respuesta.cod_cli;\r\n                        servicio.des_serv = respuesta.des_serv;\r\n                        servicio.fecha = respuesta.fecha;\r\n                        servicio.cod_emp = respuesta.cod_emp;\r\n                    }\r\n                })\r\n                peticionGet();\r\n                abrirCerrarModalEditar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionDelete = async () => {\r\n        await axios.post(baseUrl + \"/eliminarServicio\",servicioSeleccionado)\r\n        .then(response => {\r\n            var respuesta = response.data;\r\n            var dataAuxiliar = servicios;\r\n            dataAuxiliar.map(servicio => {\r\n                if (servicio.cod_serv === servicioSeleccionado.cod_serv) {\r\n                    servicio.cod_serv = respuesta.cod_serv;\r\n                }\r\n            })\r\n                peticionGet();\r\n                abrirCerrarModalEliminar();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const seleccionarServicios = (servicio, caso) => {\r\n        setServicioSeleccionado(servicio);\r\n        (caso === \"Editar\") ?\r\n            abrirCerrarModalEditar() : abrirCerrarModalEliminar();\r\n    }\r\n\r\n    useEffect(() => {\r\n        peticionGet();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        clientesGet();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        empleadosGet();\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 className=\"card-title\">Lista de Servicios</h5>\r\n                    <hr />\r\n                    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => abrirCerrarModalInsertar()}>Registrar Servicio</button>\r\n                            <ul class=\"navbar-nav mr-auto\"></ul>\r\n                        </div>\r\n                    </nav>\r\n                    <hr /> \r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nombre de Cliente</th>\r\n                                <th>Descripción de Servicio</th>\r\n                                <th>Fecha de Atención</th>\r\n                                <th>Empleado Asignado</th>\r\n                                <th>Actualizar</th>\r\n                                <th>Eliminar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {servicios.map(servicios => (\r\n                                <tr key={servicios.cod_serv}>\r\n                                    <td>{servicios.nom_cli}</td>\r\n                                    <td>{servicios.des_serv}</td>\r\n                                    <td>{servicios.fecha}</td>\r\n                                    <td>{servicios.nom_emp}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-primary\" onClick={() => seleccionarServicios(servicios, \"Editar\")}>Actualizar</button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger\" onClick={() => seleccionarServicios(servicios, \"Eliminar\")}>Eliminar</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <Modal isOpen={modalInsertar}>\r\n                <ModalHeader>Añadir Servicio</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"mb-3\">\r\n                        <label htmlFor=\"cod_cli\" className=\"form-label\">Seleccione Cliente</label>\r\n                            <select className=\"form-control\" id=\"cod_cli\" name=\"cod_cli\" onChange={handleChange}>\r\n                                <option value=\"0\">Seleccione</option>\r\n                                {clientes.map(clientes => (\r\n                                    <option key={clientes.cod_cli} value={clientes.cod_cli}>{clientes.nom_cli}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"des_serv\" className=\"form-label\">Descripción del Servicio</label>\r\n                            <textarea class=\"form-control\" id=\"des_serv\" name=\"des_serv\" onChange={handleChange}></textarea>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"fecha\" className=\"form-label\">Seleccione Fecha de Atención</label>\r\n                            <input class=\"form-control\" type=\"date\" id=\"fecha\" name=\"fecha\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"cod_emp\" className=\"form-label\">Asigne Empleado</label>\r\n                            <select className=\"form-control\" id=\"cod_emp\" name=\"cod_emp\" onChange={handleChange}>\r\n                                <option value=\"0\">Seleccione</option>\r\n                                {empleados.map(empleados => (\r\n                                    <option key={empleados.cod_emp} value={empleados.cod_emp}>{empleados.nom_emp}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" onClick={() => peticionPost()} >Añadir</button>{\"   \"}\r\n                    <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalInsertar()}>Cancelar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEditar}>\r\n                <ModalHeader>Editar Servicio</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"mb-3\" hidden>\r\n                            <label htmlFor=\"cod_serv\" className=\"form-label\">Código</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"cod_serv\" name=\"cod_serv\" readOnly value={servicioSeleccionado && servicioSeleccionado.cod_serv} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"cod_cli\" className=\"form-label\">Cliente</label>\r\n                            <select className=\"form-control\" id=\"cod_cli\" name=\"cod_cli\" onChange={handleChange} disabled value={servicioSeleccionado && servicioSeleccionado.cod_cli} >\r\n                                {clientes.map(clientes => (\r\n                                    <option key={clientes.cod_cli} value={clientes.cod_cli}>{clientes.nom_cli}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"des_serv\" className=\"form-label\">Descripción del Servicio</label>\r\n                            <textarea type=\"text\" className=\"form-control\" id=\"des_serv\" name=\"des_serv\" onChange={handleChange} value={servicioSeleccionado && servicioSeleccionado.des_serv} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"fecha\" className=\"form-label\">Fecha de Atención</label>\r\n                            <input type=\"date\" className=\"form-control\" id=\"fecha\" name=\"fecha\" onChange={handleChange} value={servicioSeleccionado && servicioSeleccionado.fecha} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"cod_emp\" className=\"form-label\">Asigne Empleado</label>\r\n                            <select className=\"form-control\" id=\"cod_emp\" name=\"cod_emp\" onChange={handleChange} value={servicioSeleccionado && servicioSeleccionado.cod_emp} >\r\n                                {empleados.map(empleados => (\r\n                                    <option key={empleados.cod_emp} value={empleados.cod_emp}>{empleados.nom_emp}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" onClick={() => peticionPut()} >Editar</button>{\"   \"}\r\n                    <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalEditar()}>Cancelar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEliminar}>\r\n                <ModalBody>\r\n                    Estás seguro que deseas eliminar el servicio: {servicioSeleccionado && servicioSeleccionado.des_serv} de {servicioSeleccionado && servicioSeleccionado.nom_cli}? \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-danger\" onClick={() => peticionDelete()}>Sí</button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => abrirCerrarModalEliminar()}>No</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Servicios","import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader} from 'reactstrap';\r\n\r\nconst Empleados = () =>{\r\n  const baseUrl = \"http://api.pyrmultimediasac.com/api/empleados\";\r\n  const distUrl = \"http://api.pyrmultimediasac.com/api/distritos/listarDistritos\";\r\n  const [empleado, setEmpleado] = useState([]);\r\n  const [distritos, setDistritos] = useState([]);\r\n  const [modalInsertar, setModalInsertar] = useState(false);\r\n  const [modalEditar, setModalEditar] = useState(false);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n  const [empleadoSeleccionado, setEmpleadoSeleccionado] = useState({\r\n    cod_emp: \"\",\r\n    nom_emp: \"\",\r\n    dni: \"\",\r\n    telf_emp: \"\",\r\n    cod_dis: \"\",\r\n    dir_emp: \"\",\r\n    email: \"\"\r\n  })\r\n\r\n\r\n  const abrirCerrarModalInsertar = () => {\r\n    setModalInsertar(!modalInsertar);\r\n  }\r\n  const abrirCerrarModalEditar = () => {\r\n    setModalEditar(!modalEditar);\r\n  }\r\n  const abrirCerrarModalEliminar = () => {\r\n    setModalEliminar(!modalEliminar);\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setEmpleadoSeleccionado({\r\n      ...empleadoSeleccionado,\r\n      [name]: value\r\n    });\r\n    console.log(empleadoSeleccionado);\r\n  }\r\n\r\n  const peticionGet = async () => {\r\n    await axios.get(baseUrl + \"/listarEmpleados\")\r\n      .then(response => {\r\n        setEmpleado(response.data);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const distritosGet = async () => {\r\n    await axios.get(distUrl)\r\n      .then(response => {\r\n        setDistritos(response.data);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const peticionPost = async () => {\r\n    delete empleadoSeleccionado.cod_emp;\r\n    await axios.post(baseUrl+\"/registrarEmpleado\", empleadoSeleccionado)\r\n      .then(response => {\r\n        setEmpleado(empleado.concat(response.data));\r\n        peticionGet();\r\n        abrirCerrarModalInsertar();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const peticionPut = async () => {\r\n    delete empleadoSeleccionado.eliminado;\r\n    delete empleadoSeleccionado.nom_dis\r\n    await axios.put(baseUrl + \"/actualizarEmpleado\", empleadoSeleccionado)\r\n      .then(response => {\r\n        var respuesta = response.data;\r\n        var dataAuxiliar = empleado;\r\n        dataAuxiliar.map(empleado => {\r\n          if (empleado.cod_emp === empleadoSeleccionado.cod_emp) {\r\n            empleado.cod = respuesta.cod_emp;\r\n            empleado.nom = respuesta.nom_emp;\r\n            empleado.dni = respuesta.dni;\r\n            empleado.telf = respuesta.telf_emp;\r\n            empleado.dis = respuesta.cod_dis;\r\n            empleado.dir = respuesta.dir_emp;\r\n            empleado.email = respuesta.email;\r\n          }\r\n        })\r\n        peticionGet();\r\n        abrirCerrarModalEditar();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const peticionDelete = async () => {\r\n    await axios.post(baseUrl + \"/eliminarEmpleado\", empleadoSeleccionado)\r\n    .then(response => {\r\n      var respuesta = response.data;\r\n      var dataAuxiliar = empleado;\r\n      dataAuxiliar.map(empleado => {\r\n        if (empleado.cod_emp === empleadoSeleccionado.cod_emp) {\r\n          empleado.cod = respuesta.cod_emp;\r\n        }\r\n      })\r\n        peticionGet();\r\n        abrirCerrarModalEliminar();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const seleccionarEmpleado = (empleado, caso) => {\r\n    setEmpleadoSeleccionado(empleado);\r\n    (caso === \"Editar\") ?\r\n      abrirCerrarModalEditar() : abrirCerrarModalEliminar();\r\n  }\r\n\r\n  useEffect(() => {\r\n    peticionGet();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    distritosGet();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 className=\"card-title\">Lista de Empleados</h5>\r\n          <hr />\r\n          <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={() => abrirCerrarModalInsertar()}>Registrar Empleado</button>\r\n              <ul class=\"navbar-nav mr-auto\"></ul>\r\n            </div>\r\n          </nav>\r\n          <hr />\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nombre</th>\r\n                <th>Dni</th>\r\n                <th>Teléfono</th>\r\n                <th>Distrito</th>\r\n                <th>Dirección</th>\r\n                <th>Correo</th>\r\n                <th>Actualizar</th>\r\n                <th>Eliminar</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {empleado.map(empleado => (\r\n                <tr key={empleado.cod_emp}>\r\n                  <td>{empleado.nom_emp}</td>\r\n                  <td>{empleado.dni}</td>\r\n                  <td>{empleado.telf_emp}</td>\r\n                  <td>{empleado.nom_dis}</td>\r\n                  <td>{empleado.dir_emp}</td>\r\n                  <td>{empleado.email}</td>\r\n                  <td>\r\n                    <button className=\"btn btn-primary\" onClick={() => seleccionarEmpleado(empleado, \"Editar\")}>Actualizar</button>\r\n                  </td>\r\n                  <td>\r\n                    <button className=\"btn btn-danger\" onClick={() => seleccionarEmpleado(empleado, \"Eliminar\")}>Eliminar</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={modalInsertar}>\r\n        <ModalHeader>Añadir Empleado</ModalHeader>\r\n        <ModalBody>\r\n          <form>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"nom_emp\" className=\"form-label\">Nombre y Apellidos</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"nom_emp\" name=\"nom_emp\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"dni\" className=\"form-label\">Documento de Identidad</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"dni\" name=\"dni\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"telf_emp\" className=\"form-label\">Teléfono</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"telf_emp\" name=\"telf_emp\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"cod_dis\" className=\"form-label\">Distrito</label>\r\n              <select className=\"form-control\" id=\"cod_dis\" name=\"cod_dis\" onChange={handleChange}>\r\n                <option value=\"0\">Seleccione</option>\r\n                {distritos.map(distritos => (\r\n                  <option key={distritos.cod_dis} value={distritos.cod_dis}>{distritos.nom_dis}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"dir_emp\" className=\"form-label\">Dirección</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"dir_emp\" name=\"dir_emp\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"email\" className=\"form-label\">Correo</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={handleChange} />\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-primary\" onClick={() => peticionPost()} >Añadir</button>{\"   \"}\r\n          <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalInsertar()}>Cancelar</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalEditar}>\r\n        <ModalHeader>Editar Empleado</ModalHeader>\r\n        <ModalBody>\r\n          <form>\r\n            <div className=\"mb-3\" hidden>\r\n              <label htmlFor=\"cod_emp\" className=\"form-label\">Código</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"cod_emp\" name=\"cod_emp\" readOnly value={empleadoSeleccionado && empleadoSeleccionado.cod_emp} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"nom_emp\" className=\"form-label\">Nombre y Apellidos</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"nom_emp\" name=\"nom_emp\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.nom_emp} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"dni\" className=\"form-label\">Documento de Identidad</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"dni\" name=\"dni\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.dni} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"telf_emp\" className=\"form-label\">Teléfono</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"telf_emp\" name=\"telf_emp\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.telf_emp} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"codDis\" className=\"form-label\">Distrito</label>\r\n              <select className=\"form-control\" id=\"cod_dis\" name=\"cod_dis\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.cod_dis} >\r\n                {distritos.map(distritos => (\r\n                  <option key={distritos.cod_dis} value={distritos.cod_dis}>{distritos.nom_dis}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"dir_emp\" className=\"form-label\">Dirección</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"dir_emp\" name=\"dir_emp\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.dir_emp} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"email\" className=\"form-label\">Correo</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={handleChange} value={empleadoSeleccionado && empleadoSeleccionado.email} />\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-primary\" onClick={() => peticionPut()} >Editar</button>{\"   \"}\r\n          <button className=\"btn btn-danger\" onClick={() => abrirCerrarModalEditar()}>Cancelar</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalEliminar}>\r\n        <ModalBody>\r\n          Estás seguro que deseas eliminar al Empleado {empleadoSeleccionado && empleadoSeleccionado.nom_emp}?\r\n                </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-danger\" onClick={() => peticionDelete()}>Sí</button>\r\n          <button className=\"btn btn-secondary\" onClick={() => abrirCerrarModalEliminar()}>No</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Empleados","import React, {useState, useEffect} from 'react';\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n  Link\n} from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Clientes from './componentes/clientes';\nimport Servicios from './componentes/servicios';\nimport Empleados from './componentes/empleados';\n\nfunction App() {  \n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n   \n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Navbar color=\"primary\" dark expand=\"md\">\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <NavbarBrand href=\"/empleados\">Empleados</NavbarBrand>\n              </NavItem>\n              <NavItem>\n                <NavbarBrand href=\"/clientes\">Clientes</NavbarBrand>\n              </NavItem>\n              <NavItem>\n                <NavbarBrand href=\"/servicios\">Servicios</NavbarBrand>\n              </NavItem>                \n            </Nav>\n          </Collapse>\n        </Navbar>\n\n        <Switch>\n          <Route path=\"/clientes\">\n            <Clientes />\n          </Route>\n          <Route path=\"/servicios\">\n            <Servicios />\n          </Route>\n          <Route path=\"/empleados\">\n            <Empleados />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}